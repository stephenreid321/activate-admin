
<div class="page-header"> 
  <h1><%= @resource.new_record? ? "New #{human_model_name(model).downcase}" : "Edit #{human_model_name(model).downcase}"%></h1>
  <% unless params[:popup] %><a href="<%=url(:index, :model => model.to_s)%>" class="btn btn-secondary"><i class="fa fa-th-list"></i>&nbsp;All <%=human_model_name(model).downcase.pluralize%></a><% end %>
</div>

<div class="col-sm-8 mx-auto">
  <% form_for model.to_s.underscore.to_sym, (@resource.new_record? ? url(:new, :model => model.to_s) : url(:edit, :model => model.to_s, :id => @resource.id)), :multipart => true do |f| %>

    <%= hidden_field_tag :popup, :value => true if params[:popup] %>

    <% admin_fields(model).select { |fieldname, options| options[:edit] }.each { |fieldname, options| %> 
      <% unless @resource.new_record? and options[:type] == :collection %>
        <% case options[:type]; when :collection; assoc = assoc(model, fieldname, relationship: :has_many) %>
          <%=
          content = %Q{<ul class="list-unstyled">}
          @resource.send(fieldname).limit(l = 10).each { |x|
            content << %Q{<li><a class="popup" href="#{url(:edit, :popup => true, :model => assoc.class_name, :id => x.id)}">#{x.send(lookup_method(assoc.class_name.constantize))}</a></li>}
            }
          if @resource.send(fieldname).count > l
            content << %Q{<li>â‹®</li>}        
            content << %Q{<li><a href="#{url(:index, :model => assoc.class_name, :'qk[]' => "#{(assoc.inverse_of.try(:class_name) || model.to_s).underscore}_id", :'qb[]' => 'in', :'qv[]' => @resource.id, :'all_any' => 'all')}">See all #{pluralize(@resource.send(fieldname).count, fieldname.to_s.singularize.humanize.downcase)}</a>}
            end
          content << %Q{<li><a class="btn btn-secondary popup" href="#{url(:new, :popup => true, :model => assoc.class_name, :"#{(assoc.inverse_of.try(:class_name) || model.to_s).underscore}_id" => @resource.id)}"><i class="fa fa-plus"></i> New #{fieldname.to_s.singularize.humanize.downcase}</a></li>}
          content << %Q{</ul>} 
          f.block_layout(fieldname, content, tip: options[@resource.new_record? ? :new_tip : :edit_tip], hint: options[@resource.new_record? ? :new_hint : :edit_hint]) 
        %>
        <%  when :lookup%>
          <% @resource.send("#{fieldname}=", params[fieldname]) if !@resource.send(fieldname) %>
          <%= f.send("#{options[:type]}_block", fieldname, lookup_url: url(:index, :model => assoc(model, fieldname).class_name, :format => :json), placeholder: "Search #{fieldname.to_s.humanize.downcase.pluralize}", selected_link: (%Q{<a class="popup" href="#{url(:edit, :model => assoc(model, fieldname).class_name, :id => @resource.send(fieldname), :popup => true)}">View record</a>} if @resource.send(fieldname)), tip: options[@resource.new_record? ? :new_tip : :edit_tip], hint: options[@resource.new_record? ? :new_hint : :edit_hint]) %>
        <% else %>
          <%= f.send("#{options[:type]}_block", fieldname, tip: options[@resource.new_record? ? :new_tip : :edit_tip], hint: options[@resource.new_record? ? :new_hint : :edit_hint], disabled: options[:disabled]) %>
        <% end %>
      <% end %>
    <% } %>

    <%= f.submit_block(destroy_url: (url(:destroy, :popup => params[:popup], :model => model.to_s, :id => @resource.id) if @resource.persisted?)) %>

  <% end %>
</div>